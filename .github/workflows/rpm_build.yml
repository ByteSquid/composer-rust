name: RPM Build
on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get latest tag
        run: echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Use latest tag
        run: |
          echo "Latest tag is: ${{ env.LATEST_TAG }}"

      - name: Set up RPM build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build composer binary with cargo
        run: |
          cargo build --release

      - name: Prepare RPM spec file
        run: |
          export APP_NAME="composer"
          export APP_VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\///g')
          export APP_SUMMARY="A docker-compose package manager."
          export APP_LICENSE="MIT"
          export APP_URL="https://github.com/ByteSquid/composer-rust"
          export APP_SOURCE_URL="target/release/composer"
          export APP_DESCRIPTION="A docker-compose package manager."
          export APP_AUTHOR="Sam Ruff"
          export APP_AUTHOR_EMAIL="sam@bytesquid.com"
          mkdir -p $HOME/rpmbuild/{SPECS,SOURCES}
          envsubst < composer.spec.template > $HOME/rpmbuild/SPECS/composer.spec
          cp target/release/composer $HOME/rpmbuild/SOURCES/

      - name: Build RPM
        run: rpmbuild -ba $HOME/rpmbuild/SPECS/composer.spec

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v2
        with:
          name: composer_rpm
          path: $HOME/rpmbuild/RPMS/**/*.rpm

      - name: Download workflow artifact
        uses: actions/download-artifact@v2
        with:
          name: composer_rpm

      - name: Get Release URL and upload RPM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the tag for the release from the previous workflow
          TAG_NAME=$(echo $GITHUB_REF | sed 's/refs\/tags\///g')

          # Get the release ID
          RELEASE_ID=$(curl --silent \
                           --header "Authorization: token $GITHUB_TOKEN" \
                           --header "Accept: application/vnd.github+json" \
                           "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/$TAG_NAME" | \
                     jq '.id')

          # Upload the RPM artifact to the release
          for rpm_file in $(ls composer_rpm/*.rpm); do
            curl --progress-bar \
                 --header "Authorization: token $GITHUB_TOKEN" \
                 --header "Content-Type: application/octet-stream" \
                 --data-binary @"$rpm_file" \
                 --request POST "https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID/assets?name=$(basename $rpm_file)"
          done